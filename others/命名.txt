变量名(参考:代码大全2 11章 变量名的力量)

tips:

1.一个好的变量名是可读的、易记的和恰如其分的。该名字要完全，准确的描述出该变量所代表的事物，对变量的描述就是最佳的变量名

2.变量名的长度问题

3.一个好记得名字反应的通常都是问题，而不是解决方案。一个好名字通常表达的是what,而不是how

4.最适当的名字长度:当变量名的平均长度在10-16个字符的时候，调试程序所花费的力气是最小的，平均名字长度在8-20个字符的程序也几乎是同样容易调试的。

5.变量名对作用域的影响：较长的名字适用于很少用到的变量或者是全局变量，而较短的名字则适用于局部变量或者循环变量(作为一项防御式编程策略，一些细心地程序员会避免使用短的变量名)

6.如果你发现自己需要猜测某段代码的含义的时候，就应该考虑为变量重新命名

7.采用任何一项规则都要好于没有规则。规则可能是武断的。命名规则的威力并不来源于你所采取的某个特定规则，而是源于以下事实：规则的存在为你的代码增加了结构，减少了你需要考虑的事情。

8.变量名包含以下三类信息：变量的内容、数据的种类和变量的作用域

9.缩写的一版指导原则（一些原则之间彼此冲突，不要同时使用所有规则）：
--使用标准的缩写（列在字典中的那些常见缩写）
--去掉虚词and,or,the等
--使用每个单词的第一，第二或前几个字母
--统一的在每个单词的第一，第二或者第三个字母后阶段
--保留每个单词的第一个和最后一个字母
--使用名字中的每一个重要单词，最多不超过三个
--去除无用的后缀ing,ed等
--保留每个音节中最引人注意的发音
--确保不要改变变量的含义

反复使用上面的技术，直到把每个变量的长度所见到8-20个字符，或者达到你所用的编程语言对变量名的限制字符数

10.关于缩写：
--不要用从每个单词中删除一个字符的方式来缩写
--缩写要一致
--创建你能读出来的名字
--避免使用容易看错或者读错的字符组合
--使用词典来解决命名冲突
--避免命名冲突的一种简单做法是使用含义相同的不同单词
--在代码总用缩写对照表解释极端的名字和含义

11.应该避免的名字：
--避免使用令人误解的名字或者缩写
--避免使用具有相似含义的名字
--避免使用具有不同含义但是却有相似名字的变量
--避免发音相近的名字
--避免在名字中使用数字
--避免在名字中拼错单词
--避免使用英语中常常拼错的单词
--不要仅靠大小写来区分变量名
--避免使用多种自认语言
--避免使用标准类型、变量和子程序的名字
--不要使用与变量含义完全无关的名字

tips 2:

1.全局变量使用统一的命名规则，以便与其他变量加以区分

2.变量名中的计算值限定词:把限定词加到名字的最后，变量名中最重要的那部分，即为这一变量赋予主要含义的部分应该位于最前面，一致性可以Tiga可读性，简化维护工作
例外：num限定词（num若放在变量名开始代表一个总数，放到变量名最后代表一个下表）,所以应该避免使用num，用count/total代表总数，index代表下标

3.变量名中常用对仗词:begin/end,first/last,locked/unlocked,min/max,next/previous,old/new,opened/closed,visible/invisible,source/target,source/destination,up/down

4.循环下标的命名:循环变量应该赋予比i,j,k更长、更有意义的名字以提高可读性。如果一定要使用i,j,k,那么不要把他们用于简单循环下标之外的任何场合。

5.为状态变量命名：为状态变量取一个比flag更高的名字，标记的名字中不应该含有flag。标记应该使用枚举类型，具名常量或者用作具名常量的全局变量来对其赋值。

6.为临时变量命名:警惕临时变量，不要太过随意

7.为布尔变量命名：给布尔变量赋予隐含“真/假”含义的名字（典型的布尔变量名：done,error,found,success/ok）
(有的人喜欢在布尔变量名前加上is，这种方法的有点之一是它不能用于那些模糊不清的名字，缺点之一就是降低了简单逻辑表达式的可读性)

8.为布尔变量命名：使用肯定的布尔变量名

9.在不能保证输入参数只读的语言里面标识可读参数

10.格式化命名以提高可读性

9.位常量命名：在具名常量时，应该根据该常量所表示的含义，而不是该常量所具有的数值为该抽象事物命名。

10.标准前缀：
UDT缩写：ch(character),doc(document),pa(paragraph),src(screen region),sel(selection),wn(window)
语义前缀：c(count),first,g(global variable),i(index),last,lim,max,min
标准前缀的优点：当编译器不能检查使用的数据类型的时候，标准前缀能帮助你准确的对类型做出判断

11.创建具备可读性的短名字
